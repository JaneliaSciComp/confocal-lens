import ij.*;
import ij.gui.PolygonRoi;
import ij.gui.Roi;
import ij.process.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.geom.AffineTransform;
import java.util.*;
import mpicbg.trakem2.transform.*;
import mpicbg.ij.util.*;
import mpicbg.models.Model;
import mpicbg.models.IdentityModel;
import mpicbg.models.Point;
import mpicbg.models.PointMatch;

int w = 256;
int h = 256;
double max = 5;
int pWidth = 1024;
int pHeight = 1024;

int ySkip = 4;
int xSkip = 4;

invarianceModelClass = IdentityModel.class;
//invarianceModelClass = RigidModel2D.class;
//invarianceModelClass = AffineModel2D.class;

transforms = new String[][]
{
	{
		"Identity",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0 0.0 0.0 1.0 0.0 0.0"
	},
	{
		"previous, 488nm, pass1",
		"lenscorrection.NonLinearTransform",
		"5 21 286.0371929901086 -7.616775264633308 -3.173334766295713 284.94333800523054 8.962482218520531 3.24060499552984 6.0918350055881145 16.92366958345871 5.638391441375977 14.625931341207904 11.557546107861251 12.438656553920836 -4.380513428115396 -16.2263450548557 -8.30030501573304 -3.5956728219882135 -3.650101884812077 -13.233049496205721 -25.99137866227697 -12.906861531122747 2.6331363357860393 2.766566587043343 4.195828104842754 3.332483438616123 3.1045288426169817 1.9913341282705734 2.5696080336182443 1.4431112889766817 10.48226930449724 4.870307499841349 -0.0031433228154756354 -1.4050993439032018 -2.478373657963489 0.25181855021744126 0.036523019889556196 -2.340598300282622 -1.5746411513041376 0.34173852964213614 -0.5133419783382996 -0.3672029655916821 5.41537421195059 5.210859607688183 541.5374045384461 521.102164977193 378422.958870578 280728.9351104994 356541.5860248173 2.932539279188734E8 1.958547665171896E8 1.9161955727013737E8 2.7218704358096236E8 2.4090271525950092E11 1.5171970344433008E11 1.3362853196145944E11 1.4615801429765466E11 2.2105209274175262E11 2.0560353971135903E14 1.2465857651543356E14 1.0353260188719508E14 1.0193182871546458E14 1.186512776860692E14 1.869927106118549E14 100.0 291.8242851199794 291.5395896628885 312570.2695134415 234137.9488649778 306482.5122786001 3.070023281551125E8 2.1618752278349936E8 2.145863113023506E8 2.978485912735575E8 2.96993537765682E11 2.019174800200237E11 1.8685088251188895E11 1.9892105972685507E11 2.862714286135526E11 2.865743764305448E14 1.9059621544266806E14 1.6991781571622597E14 1.6880048744458378E14 1.8670151451429588E14 2.750984345582034E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9993907357718909 -9.93702582062268E-6 5.739994837247259E-5 0.999391724963941 0.4878080306173209 0.7672764981157574"
	},
	{
		"previous, 594nm",
		"lenscorrection.NonLinearTransform",
		"5 21 276.8535165191294 -8.742229458943429 -2.9667937974990197 251.8591265553408 20.370475510671223 9.688121801335802 5.880164068066372 17.702959200003313 5.491158177430886 14.905917911133436 -31.502997751800415 -0.05649106003852822 -2.866901067274778 -17.605273239932018 -8.299171745093602 -3.9610233439014495 -2.95471346445283 -13.343938848498114 26.223608463530162 -1.8846621443134968 1.598600535819152 2.420982280673874 3.0077152384334944 3.0954281428477266 2.830750094590625 2.8306549189663848 1.913614129735116 -0.25105596536716845 -10.098631823497051 1.2722453718985873 0.16106420413353462 -1.122907896359802 -2.0170694377156524 0.23590350585649666 0.3105423154276865 -2.2439287089945976 -1.5855662974438625 -0.08919179786706088 -0.25997635336364766 0.49778288911285173 5.794144265347634 6.50295570636075 579.4153994902118 650.3231844598963 415569.02933667315 366785.88774937234 489456.9253756748 3.2666807805326706E8 2.5995609518217707E8 2.7315434364503837E8 3.949236775729304E8 2.709308235271888E11 2.0308595583559122E11 1.927063003052477E11 2.1922630504856335E11 3.329168351315099E11 2.3286188568585006E14 1.678344264909435E14 1.502019378927223E14 1.5431331162594406E14 1.8421019920927144E14 2.892976245753943E14 100.0 282.5746147078053 257.9496171843336 313424.88721056224 241196.12423419766 305533.32172985235 3.139117622860793E8 2.3747799073791307E8 2.3427651241121253E8 3.1786217559393436E8 3.072851262801567E11 2.2855067499054013E11 2.1438792345137454E11 2.2665813995667245E11 3.1863213509673114E11 2.9883569915258525E14 2.1940635022652997E14 2.001154596464321E14 1.9983129221107978E14 2.189962976440521E14 3.150052884184608E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0002502458039118 8.68831151872237E-6 -6.83680503583343E-5 1.0002142689270526 0.23643061015389444 0.16787764148198514"
	},
	{
		"previous, 488nm, pass2",
		"lenscorrection.NonLinearTransform",
		"5 21 279.78910419998647 -7.677837968877433 -2.8285493497190077 254.57758875917887 9.403282890984388 4.310278408899056 6.217415162469665 17.824581505719088 5.42175618428442 15.165802241027828 11.543961928979918 10.592067919181858 -4.451545578643062 -18.12136692194196 -9.033177603189978 -4.05687461049156 -3.049686466243183 -15.174461257684396 -27.118355676213113 -10.99983703654081 2.8760860689444105 2.793158534646832 4.2135573249075655 3.8719424462586858 3.7217345760209426 2.4463907193133134 1.7155124242300066 2.4535281212005353 11.11196477257942 4.078209373405453 -0.028999991851997642 -1.2100722389662633 -2.710053446734854 -0.032769910337788616 0.2156161638758678 -2.4739213340587014 -1.9946326211501804 0.20075012255271651 -0.07443344921825346 -0.6496049987228767 5.855179297731217 6.484254851278142 585.5189001966048 648.4528099038763 424350.7567583471 370030.08174119657 488391.3720688024 3.362583109985728E8 2.653091218235905E8 2.7597785415675366E8 3.9431226503387845E8 2.806053438358272E11 2.091091270747215E11 1.9705741902371832E11 2.2170116677243018E11 3.324773145880008E11 2.4231014166107394E14 1.7398156648154E14 1.549935647552585E14 1.5797285074518172E14 1.8634977832045088E14 2.88862969883443E14 100.0 285.51665777136554 260.57912653572276 317070.16622810945 245226.79552266785 306517.17977995117 3.182319792168953E8 2.4169927458952385E8 2.376015172923371E8 3.1780482685614425E8 3.120171144283898E11 2.3299671841411447E11 2.18248294323678E11 2.293338884928108E11 3.178630497698992E11 3.0381923272473606E14 2.2398195237030034E14 2.0421545793815384E14 2.0322978936058906E14 2.211605709958303E14 3.137448315616984E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9993447464377212 1.978427134061551E-5 5.46884399545589E-5 0.999356426665225 0.26100530768697894 0.5336624705778692"
	},
	{
		"previous, 561nm",
		"lenscorrection.NonLinearTransform",
		"5 21 277.60465073270467 -7.668961323315754 -3.0600910817017026 251.91676378469475 8.364511587997232 3.6174972392912954 6.771494925355952 18.410380575038996 5.462286039723461 15.896574379334627 15.409078619200105 12.245219248212493 -4.361826724188075 -18.26872710999523 -9.211749944952729 -5.204903204075928 -2.624700565099749 -15.099801793900356 -31.05403337524686 -12.426454504218725 2.171143324287973 2.2794762217200737 4.60106972943065 4.422938434738061 2.8007275156203524 3.3904338932334093 1.7589460453042545 1.555855891261995 12.32219337192965 4.563009241505709 0.361847856555911 -1.0166277718065957 -2.686088713974951 -0.01710744667882169 -0.03408192165793067 -2.7212670639931615 -1.3742092299599074 -0.06470350355610799 -0.3196426699926933 -0.28560762741581014 5.802021954210042 6.514455912253814 580.2036080693551 651.4744902174356 417031.1080706447 368141.1901092977 491114.39423435135 3.284555131215125E8 2.617462763556049E8 2.747728688841031E8 3.9688404208823776E8 2.7284657117325916E11 2.0508866295909766E11 1.9460038437256052E11 2.2100318371303372E11 3.350428674806838E11 2.347913952579905E14 1.6991047014992622E14 1.5221758452624194E14 1.562621627995424E14 1.8607235458706697E14 2.914958110430245E14 100.0 283.5424512503212 258.2568058894645 314536.8000697479 243050.42048503426 306351.43336641416 3.15041906908712E8 2.3979032476477385E8 2.365766796731496E8 3.188958448619735E8 3.083848868192569E11 2.309835258103849E11 2.1722794047239728E11 2.2921002503781143E11 3.1975896320915283E11 2.999194821196978E14 2.2184355676919784E14 2.0309172653615512E14 2.0299859067935375E14 2.2170087729621722E14 3.1617342351213706E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0004872458661895 -1.7815417930778268E-4 -3.026493016517836E-5 1.0005517563661066 -0.11747853653219043 -0.15122948975786565"
	},
	{
		"previous, 647nm",
		"lenscorrection.NonLinearTransform",
		"5 21 279.1597073179855 -8.98345716098254 -2.8658245194894048 252.31338688979724 20.08236039100849 11.159836176029847 6.31456898954003 17.926758046000554 4.751411278473454 15.084190378316784 -30.85999011014517 -3.259906184614728 -3.951248190512038 -18.769714362087782 -8.941253381177905 -3.928682724090213 -1.1198208654414135 -14.41859088346185 25.743857581007134 1.0294710032186742 2.0597720940137734 3.797904247117769 4.3627708453889715 3.8223724486266737 3.1236662923236516 2.344199811444807 -0.04649101526456256 1.4936672374518452 -10.03412199821016 0.3366289108753504 0.2925073634847388 -1.7062970857438953 -2.5883445729139374 -0.025177986212113534 0.008616865249400085 -2.451287987453695 -1.6326646803315366 0.23451024474865156 0.4831528113318617 -0.3427352576446778 5.798299894023761 6.492600738837225 579.8307942468759 649.2877877855436 417333.19695678784 366768.4125020045 488338.5871363997 3.291733382613526E8 2.6093634875788364E8 2.7290845875792027E8 3.937179002742851E8 2.738593890178413E11 2.0454724892926178E11 1.9321994151461932E11 2.1874858547322858E11 3.316374675537636E11 2.3604421928723656E14 1.6954607690127712E14 1.5105811142814447E14 1.5447230714712725E14 1.8354210120573478E14 2.8796538968863194E14 100.0 284.83506997050614 258.3897208504488 315744.07526772725 242284.9750480729 305228.9220143168 3.166055326083495E8 2.385587991238202E8 2.34356971821576E8 3.172111829978758E8 3.103981020595791E11 2.2980899062039133E11 2.14606943274759E11 2.262169412279186E11 3.178068108595727E11 3.02357852611596E14 2.209048959170812E14 2.005222233071481E14 1.9964482977865288E14 2.1826579428640125E14 3.141039471563798E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9999524467280203 3.565286578335397E-5 6.0288050476851624E-5 0.9998823925933863 -0.0019563486228113547 0.14745990542972165"
	},
	{
		"auto, 488nm, pass1",
		"lenscorrection.NonLinearTransform",
		"5 21 278.1230494690236 -7.880406369147172 -2.6820476216193043 238.70804195126442 11.91033760905402 6.230637330116982 6.429027701772355 18.155453571047637 5.750802074812448 16.497116898541464 5.430482111216266 5.951546964365399 -5.572246004039364 -19.31373916620255 -9.141411878095045 -5.368692422464786 -4.592864862693346 -19.118408615708063 -20.87245540569882 -6.786470259696811 3.6345313644916297 4.310654398152607 5.658025680119124 4.892842928771152 3.0788657516864255 3.486170542004187 3.8050300280150067 6.613455297415786 8.826029616059984 2.790683351930496 -0.19344077040566554 -2.076430467450887 -3.1281564977049685 -0.023304083866165115 -0.39935049088868535 -3.0615646432956023 -1.3766647816104338 0.015523266161367566 -1.0839784275401891 -2.1543112860205085 5.930185053833436 6.701994214751236 593.0208137067791 670.2270371238992 432433.4312524149 386455.49432109867 509040.00242588157 3.434428678465809E8 2.783717468132972E8 2.9089276081723404E8 4.117535180894595E8 2.866736911522459E11 2.1973476523631226E11 2.0860160243989392E11 2.3447177687809586E11 3.470236187335547E11 2.4737674599820206E14 1.8278818730838366E14 1.6428143847404356E14 1.6777999502303612E14 1.9729901855309603E14 3.0106939846764156E14 100.0 284.18668475583814 244.61693423200262 315718.053826161 243424.4440606719 296486.8064525062 3.1722145245370084E8 2.4287410762716055E8 2.3744919271225446E8 3.1188666394164324E8 3.113670076456887E11 2.3514984344993918E11 2.2007631214277737E11 2.3047027087964264E11 3.1414058187005145E11 3.034086548696559E14 2.2652683458789775E14 2.06590413811765E14 2.0540945558627572E14 2.2292309457936125E14 3.1103111951272975E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9992527345320471 -1.632506109740204E-5 -5.029985716967667E-6 0.9992051839383225 0.45814972824719535 0.7407743701418013"
	},
	{
		"auto, 594nm",
		"lenscorrection.NonLinearTransform",
		"5 21 273.88561319532107 -8.811706565967908 -2.531332647472004 233.5051306473167 18.798313085711584 10.784978008084678 5.7601475324244475 17.916641891551386 3.820458294975545 19.791275989163086 -27.68562101518209 -2.775373065642704 -2.800451229721318 -18.200512094779874 -7.9287475145778785 -5.5786814923969885 0.5114931921421295 -26.585981707253286 22.332420245224 0.6023664352935363 0.9160766208780942 3.0218345977208223 3.976285182220895 3.911890870810563 1.4467323449500569 4.646661175369104 -1.1109076281863093 13.88443020737162 -8.68903310484365 0.5170995694195755 0.5619087007490287 -1.4821562373802464 -2.0774104701046863 0.1322491661274885 -0.3287088483155127 -2.564369643997825 -0.5116455783319358 -0.8387903739752787 0.5691401215805878 -4.773767535326445 5.881727226725467 6.771745200553023 588.1740082663194 677.2037066172707 423988.06980286096 386920.57697464555 516184.19592329516 3.33586115883646E8 2.7525905067090625E8 2.9165159295843583E8 4.184694346004363E8 2.7633934130834735E11 2.1508245021730188E11 2.0639381639867587E11 2.351316346899062E11 3.532993460005653E11 2.3697160395627653E14 1.7746797769913984E14 1.6082824050202038E14 1.659411871812525E14 1.978669811857371E14 3.069812536771605E14 100.0 279.3596949011374 239.96068644234518 310767.54851909284 238092.5262097594 294713.3014203062 3.114678699953943E8 2.381686452357666E8 2.3312097206741095E8 3.119724910534146E8 3.048094042291033E11 2.3034810883531415E11 2.1575749370759372E11 2.2715999228312006E11 3.154987788195988E11 2.96170658490382E14 2.214873676120033E14 2.0214623790785003E14 2.0169811467005562E14 2.2045782407499888E14 3.1333005431842044E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.000113786616276 1.0969557897624711E-4 -8.70484031211251E-5 1.0002433804696576 0.15525095822393786 -0.012846106882437258"
	},
	{
		"auto, 488nm, pass2",
		"lenscorrection.NonLinearTransform",
		"5 21 276.75109924880485 -7.601415390168063 -2.324278277136644 238.98510478018764 11.601031299611456 4.668536124865341 6.52332017365195 17.92265961873818 2.75851576766188 16.587696469346277 6.498943630590052 8.783674858423812 -5.117171207724173 -17.80515388204214 -9.486695561580923 -5.433179024781651 3.5749683558616745 -19.15225899282293 -21.89740447243624 -8.555445755314757 2.9404578490945514 1.701760377801783 5.2883363749626895 5.078115251468237 3.6540457492331484 3.477133113647696 -5.409907968091224 6.60679120544059 9.111155726657064 3.019547325048836 0.07294748132058171 -0.6893669125306423 -2.8458201570940433 -0.19434341657215803 -0.3501931391881854 -2.994102709334962 -1.672815629060032 -0.05659817083660634 2.6075880036078143 -2.1180264957119666 5.946951237392442 6.6961231309346125 594.696694839567 669.6397948985352 433674.04378404585 386882.13253560313 508420.55118026165 3.4441623871861696E8 2.785171675513613E8 2.909415630548383E8 4.1111961778859097E8 2.875248179742783E11 2.1970193821831967E11 2.084610265899493E11 2.3433673211915088E11 3.463714741046999E11 2.481802599881425E14 1.8267576999459012E14 1.640116365047211E14 1.675303975070462E14 1.9706476380716622E14 3.004005060974835E14 100.0 282.8643485604392 244.95889901803184 315364.184181499 242456.12418120948 296450.0018927086 3.174197583844419E8 2.4202828636430505E8 2.367812037221666E8 3.1163777726197195E8 3.1191911889319305E11 2.344545729059576E11 2.1941796608508853E11 2.2999807184782492E11 3.1381752015650366E11 3.042214812979225E14 2.2597919072878062E14 2.0603642367654078E14 2.050191884817961E14 2.226322504168205E14 3.107355835394372E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.999255174619616 1.188977632604746E-6 -5.687427132878023E-5 0.9992019780437317 0.3804495363581515 0.6168363476586136"
	},
	{
		"auto, 561nm",
		"lenscorrection.NonLinearTransform",
		"5 21 273.94314774682357 -7.783844772558025 -2.647954724851248 235.7730211857201 9.338290703304773 5.213617794724554 6.400660486276871 18.206060584403623 3.9629956151467747 17.772452874386794 13.76691189196805 7.406017896996497 -4.6837682847751125 -18.172866462644528 -8.265280258237429 -5.288786546916798 0.6326464838555754 -20.87386362621605 -30.494162136162664 -6.673462410275132 3.5757962812261237 1.2554551762960053 3.610195680250227 5.712635896160424 2.3384880089397955 2.6988144046205758 -1.8121829007375112 8.138881172725608 12.60357431460928 2.120810463797992 -0.7014063546709487 -0.060260526248417046 -1.9210060783750247 -1.0258953895203997 -0.20549471388094576 -2.4495312494943486 -1.1040461689997336 0.12254823838436801 1.0625161916802321 -2.77521361173865 5.902714705437356 6.710408150172042 590.2730546007672 671.0699452504315 426836.88467666286 384851.52113816113 508955.61945735913 3.3641965729455435E8 2.749485396368513E8 2.888118739911522E8 4.1093194510907716E8 2.789354418831009E11 2.1542803513977563E11 2.0540336106180188E11 2.320651739237012E11 3.456879333543894E11 2.3930482344580722E14 1.780400328886674E14 1.605815669787768E14 1.6471342256047803E14 1.947242826763693E14 2.993918357653279E14 100.0 280.03017273584095 242.12075797960583 311044.2790180265 239362.36614620246 294371.6078392782 3.118025772397796E8 2.3864598817759168E8 2.3379306221486014E8 3.0992850652506846E8 3.054062233204757E11 2.305031951167563E11 2.1615435487379553E11 2.2714355047713098E11 3.122873418541436E11 2.9710743691064594E14 2.215409639218186E14 2.0229602748404994E14 2.01836408150218E14 2.1982501197995675E14 3.092573757064515E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0004550359694575 -7.932752805536213E-5 1.1551806042964506E-5 1.0005314096584175 -0.24081977968927992 -0.2761939093327821"
	},
	{
		"auto, 647nm",
		"lenscorrection.NonLinearTransform",
		"5 21 275.54441162782683 -8.48851137669263 -2.6512894489248424 236.27321696763494 20.08087271315236 9.071745807967986 5.913826223505119 17.413473397012766 4.795676259917096 16.318712715661064 -30.93469130944834 0.8631739867644217 -3.9998208162379782 -17.365258736007224 -7.502138265584456 -4.0332136632162765 -1.9701514784779857 -18.494948553951904 25.658256574899028 -2.776986176221472 2.2389398400537814 1.9042478324206566 3.907196664521969 3.693549152361367 1.4124225466919285 2.5699889149257285 1.0832758167720797 5.984471348002522 -9.91989528686415 1.6419107525542707 0.30520924534751703 -0.886579364914911 -2.679626164602348 -5.437383174777821E-5 0.41799134828579554 -2.4585356302634813 -1.0268689309072379 0.15207618168197934 0.008994133151455364 -2.0110676377784094 5.920120151713107 6.745391082905156 592.013401078177 674.5679370486785 429519.61529866734 388092.0274019619 513699.0300018289 3.396165697722146E8 2.78050542662703E8 2.925412824410903E8 4.163179924516122E8 2.8237299046407825E11 2.184735669764222E11 2.0859740311788214E11 2.3598373417053198E11 3.514419066490278E11 2.4280421803883622E14 1.810319090453443E14 1.6350140690770612E14 1.678850616611963E14 1.9869880367519175E14 3.053717310239263E14 100.0 281.14451569099714 242.19615301050143 312872.1381344009 240798.27311900858 295901.96349178755 3.138600565183826E8 2.408002168832921E8 2.3578333470896494E8 3.1261273452398455E8 3.0743880865240607E11 2.330404893779732E11 2.185803066626205E11 2.2958367372910645E11 3.159183871321752E11 2.9902146538107506E14 2.2426294735975816E14 2.0504568195036722E14 2.0447656030606116E14 2.226848314307259E14 3.1367672756050075E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9999012800246294 9.518806907187714E-5 -3.0831213872120606E-5 0.9998447239927275 -0.04234274253622439 -0.013533608390106755"
	}
};


ImageProcessor visualizeDifference(
		int w,
		int h,
		int pWidth,
		int pHeight,
		CoordinateTransform ct1,
		CoordinateTransform ct2) {
	double sx = (double)pWidth / w;
	double sy = (double)pHeight / h;
	FloatProcessor ip = new FloatProcessor(w, h);
	for (int y = 0; y < h; ++y) {
		for (int x = 0; x < w; ++x) {
			double[] l1 = new double[]{x * sx, y * sy};
			double[] l2 = new double[]{x * sx, y * sy};
			ct1.applyInPlace(l1);
			ct2.applyInPlace(l2);
			double dx = l1[0] - l2[0];
			double dy = l1[1] - l2[1];
			double d = Math.sqrt(dx * dx + dy * dy);
			ip.setf(x, y, (float)d);
		}
	}
	//matrix.copyBits( ip, i * 256, j * 256, Blitter.COPY );
	return ip;
}


ImageProcessor visualizeDifferenceVectorDistribution(
		int w,
		int h,
		int pWidth,
		int pHeight,
		CoordinateTransform ct1,
		CoordinateTransform ct2,
		double max) {
	double hw = 0.5 * w;
	double hh = 0.5 * h;
	double sx = (double)pWidth / w;
	double sy = (double)pHeight / h;
	FloatProcessor ip = new FloatProcessor(w, h);
	for (int y = 0; y < h; ++y) {
		for (int x = 0; x < w; ++x) {
			double[] l1 = new double[]{x * sx, y * sy};
			double[] l2 = new double[]{x * sx, y * sy};
			ct1.applyInPlace(l1);
			ct2.applyInPlace(l2);
			double dx = l1[0] - l2[0];
			double dy = l1[1] - l2[1];
			dx = Math.min(w - 1, Math.max(0.0, (dx / max + 1) * hw));
			dy = Math.min(w - 1, Math.max(0.0, (dy / max + 1) * hh));
			int ix = (int)Math.round(dx);
			int iy = (int)Math.round(dy);
			ip.setf(ix, iy, (float)(1.0 + ip.getPixelValue(ix, iy)));
		}
	}
	//matrix.copyBits( ip, i * 256, j * 256, Blitter.COPY );
	return ip;
}

ImageProcessor visualizeDifferenceVectors(
		int w,
		int h,
		int pWidth,
		int pHeight,
		CoordinateTransform ct1,
		CoordinateTransform ct2,
		double max) {
	double sx = (double)pWidth / w;
	double sy = (double)pHeight / h;
	ColorProcessor ip = new ColorProcessor(w, h);
	for (int y = 0; y < h; ++y) {
		for (int x = 0; x < w; ++x) {
			double[] l1 = new double[]{x * sx, y * sy};
			double[] l2 = new double[]{x * sx, y * sy};
			ct1.applyInPlace(l1);
			ct2.applyInPlace(l2);
			double dx = (l1[0] - l2[0] ) / max;
			double dy = (l1[1] - l2[1] ) / max;
			double d = Math.sqrt(dx * dx + dy * dy);
			double s = 1.0 / d;
			if (s < 1.0) {
				dx *= s;
				dy *= s;
			}
			
			ip.set(x, y, mpicbg.ij.util.Util.colorVector(dx, dy));
		}
	}
	return ip;
}

Model sampleModel(CoordinateTransform ct, Class modelClass, int width, int height) {
	model = modelClass.newInstance();
	matches = new ArrayList();
	double scaleX = ((double)width - 1.0f) / 63.0f;
	double scaleY = ((double)height - 1.0f) / 63.0f;
	for (int y = 0; y < 64; ++y) {
		double ys = scaleY * y;
		for (int x = 0; x < 64; ++x) {
			double xs = scaleX * x;
			Point p = new Point(new double[]{xs, ys});
			p.apply(ct);
			matches.add(new PointMatch(p, p));
		}
	}
	model.fit(matches);
	return model;
}

/**
 * Estimate a transformation model between two CoordinateTransforms.
 * The model maps ct1 into ct2.
 */
Model sampleModel2(
		CoordinateTransform ct1,
		CoordinateTransform ct2,
		Class modelClass,
		int width,
		int height) {
	model = modelClass.newInstance();
	matches = new ArrayList();
	double scaleX = ((double)width - 1.0f) / 63.0f;
	double scaleY = ((double)height - 1.0f) / 63.0f;
	for (int y = 0; y < 64; ++y) {
		double ys = scaleY * y;
		for (int x = 0; x < 64; ++x) {
			double xs = scaleX * x;
			Point p = new Point(new double[]{xs, ys});
			Point q = new Point(new double[]{xs, ys});
			ct1.applyInPlace(p.getL());
			q.apply(ct2);
			matches.add(new PointMatch(p, q));
		}
	}
	model.fit(matches);
	return model;
}


CoordinateTransform createTransform(
		String className,
		String dataString) {
	CoordinateTransform ct = (CoordinateTransform)Class.forName(className).newInstance();
	ct.init(dataString);
	return ct;
}

CoordinateTransformList createTransformList(int j) {
	CoordinateTransformList ctl = new CoordinateTransformList();
	for (int k = 2; k < transforms[j].length; k +=2)
		ctl.add(createTransform(transforms[j][k-1], transforms[j][k]));
	return ctl;
}

ImagePlus showDifferenceVectors() {
	ColorProcessor table = new ColorProcessor(
		(w + xSkip) * transforms.length - xSkip,
		(h + ySkip) * transforms.length - ySkip);
	ImagePlus impTable = new ImagePlus("Matrix", table);
	impTable.show();
	
	for (int i = 0; i < transforms.length; ++i) {
		ct1 = createTransformList(i);
		for (int j = 0; j < transforms.length; ++j) {
			ct2 = createTransformList(j);
	
			/* fit a simple linear model to compare with using some transferred samples */
			t = sampleModel2(ct2, ct1, invarianceModelClass, pWidth, pHeight);
			ct2.add(t);
	
			ImageProcessor ip = visualizeDifferenceVectors(
				w,
				h,
				pWidth,
				pHeight,
				ct1,
				ct2,
				max);
	
			table.copyBits(ip, (w + xSkip) * i, (h + ySkip) * j, Blitter.COPY);
			impTable.updateAndDraw();
		}
	}
	return impTable;
}


ImagePlus showDifferenceVectorDistributions() {
	FloatProcessor table = new FloatProcessor(
		(w + xSkip) * transforms.length - xSkip,
		(h + ySkip) * transforms.length - ySkip);
	ImagePlus impTable = new ImagePlus("Matrix", table);
	impTable.show();
	
	
	for (int i = 0; i < transforms.length; ++i) {
		ct1 = createTransformList(i);
		for (int j = 0; j < transforms.length; ++j) {
			ct2 = createTransformList(j);
	
			/* fit a simple linear model to compare with using some transferred samples */
			t = sampleModel2(ct2, ct1, invarianceModelClass, pWidth, pHeight);
			ct2.add(t);
	
			ImageProcessor ip = visualizeDifferenceVectorDistribution(
				w,
				h,
				pWidth,
				pHeight,
				ct1,
				ct2,
				max);
	
			table.copyBits(ip, (w + xSkip) * i, (h + ySkip) * j, Blitter.COPY);
			impTable.updateAndDraw();
		}
	}
	return impTable;
}

void drawCircles(ColorProcessor ip) {
	for (int s = 1; s <= max; ++s) {
		ip.setColor(
			new Color(
				(float)(Math.min(1.0f, 2.0f * s / max)),
				(float)(Math.min(1.0f, 2.0f - 2 * s / max)),
				0.0f));
		for (int i = 0; i < transforms.length; ++i) {
			int x = (w + xSkip) * i;
			for (int j = i + 1; j < transforms.length; ++j) {
				int y = (h + ySkip) * j;
				ip.drawOval(
					(int)(w / 2 + x - Math.round(s * w / max / 2)),
					(int)(h / 2 + y - Math.round(s * h / max / 2)),
					(int)Math.round(s * w / max) + 1,
					(int)Math.round(s * h / max) + 1);
			}
		}
	}
}

void drawLabels(ImagePlus imp, int offset) {
	ip = imp.getProcessor().createProcessor(imp.getWidth() + offset, imp.getHeight() +offset);
	ip.copyBits(imp.getProcessor(), offset, offset, Blitter.COPY);
	ip.setColor(Color.WHITE);
	ip.setAntialiasedText(true);
	ip.setJustification(ImageProcessor.CENTER_JUSTIFY);
	Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 14);
	ip.setFont(font);
	for (int i = 0; i < transforms.length; ++i) {
		int x = (w + xSkip) * i;
		ip.drawString(
			transforms[i][0],
			(int)(w / 2 + x + offset),
			20);
	}
	ip = ip.rotateRight();
//	ip.flipHorizontal();
	ip.setColor(Color.WHITE);
	ip.setAntialiasedText(true);
	ip.setJustification(ImageProcessor.CENTER_JUSTIFY);
	//ip.setFont(font.deriveFont(new AffineTransform(-1, 0, 0, 1, 0, 0)));
	ip.setFont(font);
	for (int i = 0; i < transforms.length; ++i) {
		int x = (w + xSkip) * i;
		ip.drawString(
			transforms[transforms.length - 1 - i][0],
			(int)(w / 2 + x),
			20);
	}
	ip = ip.rotateLeft();
//	ip.flipHorizontal();
	imp.setProcessor(ip);
}


// main

impVectors = showDifferenceVectors();
impDists = showDifferenceVectorDistributions();

impDists.setDisplayRange(0, 32);
Thread.sleep(1000);
IJ.run(impDists, "Fire", "");
Thread.sleep(1000);
IJ.run(impDists, "RGB Color", "");
Thread.sleep(1000);
impDists.getProcessor().snapshot();
roi = new PolygonRoi(
	new int[]{0, impVectors.getWidth(), impVectors.getWidth()},
	new int[]{0, 0, impVectors.getHeight()},
	3,
    Roi.POLYGON);
impVectors.setRoi(roi);
IJ.run(impVectors, "Copy", "");
impDists.setRoi(roi);
IJ.run(impDists, "Paste", "");

drawCircles(impDists.getProcessor());
drawLabels(impDists, 26);
impDists.updateAndDraw();
