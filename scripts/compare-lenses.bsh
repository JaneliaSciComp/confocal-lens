import ij.*;
import ij.gui.PolygonRoi;
import ij.gui.Roi;
import ij.process.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.geom.AffineTransform;
import java.util.*;
import mpicbg.trakem2.transform.*;
import mpicbg.ij.util.*;
import mpicbg.models.Model;
import mpicbg.models.IdentityModel;
import mpicbg.models.Point;
import mpicbg.models.PointMatch;

int w = 256;
int h = 256;
double max = 5;
int pWidth = 1024;
int pHeight = 1024;

int ySkip = 4;
int xSkip = 4;

invarianceModelClass = IdentityModel.class;
//invarianceModelClass = RigidModel2D.class;
//invarianceModelClass = AffineModel2D.class;

transforms = new String[][]
{
	{
		"Identity",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0 0.0 0.0 1.0 0.0 0.0"
	},
	{
		"previous, 488nm, pass1",
		"lenscorrection.NonLinearTransform",
		"5 21 286.0371929901086 -7.616775264633308 -3.173334766295713 284.94333800523054 8.962482218520531 3.24060499552984 6.0918350055881145 16.92366958345871 5.638391441375977 14.625931341207904 11.557546107861251 12.438656553920836 -4.380513428115396 -16.2263450548557 -8.30030501573304 -3.5956728219882135 -3.650101884812077 -13.233049496205721 -25.99137866227697 -12.906861531122747 2.6331363357860393 2.766566587043343 4.195828104842754 3.332483438616123 3.1045288426169817 1.9913341282705734 2.5696080336182443 1.4431112889766817 10.48226930449724 4.870307499841349 -0.0031433228154756354 -1.4050993439032018 -2.478373657963489 0.25181855021744126 0.036523019889556196 -2.340598300282622 -1.5746411513041376 0.34173852964213614 -0.5133419783382996 -0.3672029655916821 5.41537421195059 5.210859607688183 541.5374045384461 521.102164977193 378422.958870578 280728.9351104994 356541.5860248173 2.932539279188734E8 1.958547665171896E8 1.9161955727013737E8 2.7218704358096236E8 2.4090271525950092E11 1.5171970344433008E11 1.3362853196145944E11 1.4615801429765466E11 2.2105209274175262E11 2.0560353971135903E14 1.2465857651543356E14 1.0353260188719508E14 1.0193182871546458E14 1.186512776860692E14 1.869927106118549E14 100.0 291.8242851199794 291.5395896628885 312570.2695134415 234137.9488649778 306482.5122786001 3.070023281551125E8 2.1618752278349936E8 2.145863113023506E8 2.978485912735575E8 2.96993537765682E11 2.019174800200237E11 1.8685088251188895E11 1.9892105972685507E11 2.862714286135526E11 2.865743764305448E14 1.9059621544266806E14 1.6991781571622597E14 1.6880048744458378E14 1.8670151451429588E14 2.750984345582034E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9993907357718909 -9.93702582062268E-6 5.739994837247259E-5 0.999391724963941 0.4878080306173209 0.7672764981157574"
	},
	{
		"previous, 594nm",
		"lenscorrection.NonLinearTransform",
		"5 21 276.8535165191294 -8.742229458943429 -2.9667937974990197 251.8591265553408 20.370475510671223 9.688121801335802 5.880164068066372 17.702959200003313 5.491158177430886 14.905917911133436 -31.502997751800415 -0.05649106003852822 -2.866901067274778 -17.605273239932018 -8.299171745093602 -3.9610233439014495 -2.95471346445283 -13.343938848498114 26.223608463530162 -1.8846621443134968 1.598600535819152 2.420982280673874 3.0077152384334944 3.0954281428477266 2.830750094590625 2.8306549189663848 1.913614129735116 -0.25105596536716845 -10.098631823497051 1.2722453718985873 0.16106420413353462 -1.122907896359802 -2.0170694377156524 0.23590350585649666 0.3105423154276865 -2.2439287089945976 -1.5855662974438625 -0.08919179786706088 -0.25997635336364766 0.49778288911285173 5.794144265347634 6.50295570636075 579.4153994902118 650.3231844598963 415569.02933667315 366785.88774937234 489456.9253756748 3.2666807805326706E8 2.5995609518217707E8 2.7315434364503837E8 3.949236775729304E8 2.709308235271888E11 2.0308595583559122E11 1.927063003052477E11 2.1922630504856335E11 3.329168351315099E11 2.3286188568585006E14 1.678344264909435E14 1.502019378927223E14 1.5431331162594406E14 1.8421019920927144E14 2.892976245753943E14 100.0 282.5746147078053 257.9496171843336 313424.88721056224 241196.12423419766 305533.32172985235 3.139117622860793E8 2.3747799073791307E8 2.3427651241121253E8 3.1786217559393436E8 3.072851262801567E11 2.2855067499054013E11 2.1438792345137454E11 2.2665813995667245E11 3.1863213509673114E11 2.9883569915258525E14 2.1940635022652997E14 2.001154596464321E14 1.9983129221107978E14 2.189962976440521E14 3.150052884184608E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0002502458039118 8.68831151872237E-6 -6.83680503583343E-5 1.0002142689270526 0.23643061015389444 0.16787764148198514"
	},
	{
		"previous, 488nm, pass2",
		"lenscorrection.NonLinearTransform",
		"5 21 279.78910419998647 -7.677837968877433 -2.8285493497190077 254.57758875917887 9.403282890984388 4.310278408899056 6.217415162469665 17.824581505719088 5.42175618428442 15.165802241027828 11.543961928979918 10.592067919181858 -4.451545578643062 -18.12136692194196 -9.033177603189978 -4.05687461049156 -3.049686466243183 -15.174461257684396 -27.118355676213113 -10.99983703654081 2.8760860689444105 2.793158534646832 4.2135573249075655 3.8719424462586858 3.7217345760209426 2.4463907193133134 1.7155124242300066 2.4535281212005353 11.11196477257942 4.078209373405453 -0.028999991851997642 -1.2100722389662633 -2.710053446734854 -0.032769910337788616 0.2156161638758678 -2.4739213340587014 -1.9946326211501804 0.20075012255271651 -0.07443344921825346 -0.6496049987228767 5.855179297731217 6.484254851278142 585.5189001966048 648.4528099038763 424350.7567583471 370030.08174119657 488391.3720688024 3.362583109985728E8 2.653091218235905E8 2.7597785415675366E8 3.9431226503387845E8 2.806053438358272E11 2.091091270747215E11 1.9705741902371832E11 2.2170116677243018E11 3.324773145880008E11 2.4231014166107394E14 1.7398156648154E14 1.549935647552585E14 1.5797285074518172E14 1.8634977832045088E14 2.88862969883443E14 100.0 285.51665777136554 260.57912653572276 317070.16622810945 245226.79552266785 306517.17977995117 3.182319792168953E8 2.4169927458952385E8 2.376015172923371E8 3.1780482685614425E8 3.120171144283898E11 2.3299671841411447E11 2.18248294323678E11 2.293338884928108E11 3.178630497698992E11 3.0381923272473606E14 2.2398195237030034E14 2.0421545793815384E14 2.0322978936058906E14 2.211605709958303E14 3.137448315616984E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9993447464377212 1.978427134061551E-5 5.46884399545589E-5 0.999356426665225 0.26100530768697894 0.5336624705778692"
	},
	{
		"previous, 561nm",
		"lenscorrection.NonLinearTransform",
		"5 21 277.60465073270467 -7.668961323315754 -3.0600910817017026 251.91676378469475 8.364511587997232 3.6174972392912954 6.771494925355952 18.410380575038996 5.462286039723461 15.896574379334627 15.409078619200105 12.245219248212493 -4.361826724188075 -18.26872710999523 -9.211749944952729 -5.204903204075928 -2.624700565099749 -15.099801793900356 -31.05403337524686 -12.426454504218725 2.171143324287973 2.2794762217200737 4.60106972943065 4.422938434738061 2.8007275156203524 3.3904338932334093 1.7589460453042545 1.555855891261995 12.32219337192965 4.563009241505709 0.361847856555911 -1.0166277718065957 -2.686088713974951 -0.01710744667882169 -0.03408192165793067 -2.7212670639931615 -1.3742092299599074 -0.06470350355610799 -0.3196426699926933 -0.28560762741581014 5.802021954210042 6.514455912253814 580.2036080693551 651.4744902174356 417031.1080706447 368141.1901092977 491114.39423435135 3.284555131215125E8 2.617462763556049E8 2.747728688841031E8 3.9688404208823776E8 2.7284657117325916E11 2.0508866295909766E11 1.9460038437256052E11 2.2100318371303372E11 3.350428674806838E11 2.347913952579905E14 1.6991047014992622E14 1.5221758452624194E14 1.562621627995424E14 1.8607235458706697E14 2.914958110430245E14 100.0 283.5424512503212 258.2568058894645 314536.8000697479 243050.42048503426 306351.43336641416 3.15041906908712E8 2.3979032476477385E8 2.365766796731496E8 3.188958448619735E8 3.083848868192569E11 2.309835258103849E11 2.1722794047239728E11 2.2921002503781143E11 3.1975896320915283E11 2.999194821196978E14 2.2184355676919784E14 2.0309172653615512E14 2.0299859067935375E14 2.2170087729621722E14 3.1617342351213706E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0004872458661895 -1.7815417930778268E-4 -3.026493016517836E-5 1.0005517563661066 -0.11747853653219043 -0.15122948975786565"
	},
	{
		"previous, 647nm",
		"lenscorrection.NonLinearTransform",
		"5 21 279.1597073179855 -8.98345716098254 -2.8658245194894048 252.31338688979724 20.08236039100849 11.159836176029847 6.31456898954003 17.926758046000554 4.751411278473454 15.084190378316784 -30.85999011014517 -3.259906184614728 -3.951248190512038 -18.769714362087782 -8.941253381177905 -3.928682724090213 -1.1198208654414135 -14.41859088346185 25.743857581007134 1.0294710032186742 2.0597720940137734 3.797904247117769 4.3627708453889715 3.8223724486266737 3.1236662923236516 2.344199811444807 -0.04649101526456256 1.4936672374518452 -10.03412199821016 0.3366289108753504 0.2925073634847388 -1.7062970857438953 -2.5883445729139374 -0.025177986212113534 0.008616865249400085 -2.451287987453695 -1.6326646803315366 0.23451024474865156 0.4831528113318617 -0.3427352576446778 5.798299894023761 6.492600738837225 579.8307942468759 649.2877877855436 417333.19695678784 366768.4125020045 488338.5871363997 3.291733382613526E8 2.6093634875788364E8 2.7290845875792027E8 3.937179002742851E8 2.738593890178413E11 2.0454724892926178E11 1.9321994151461932E11 2.1874858547322858E11 3.316374675537636E11 2.3604421928723656E14 1.6954607690127712E14 1.5105811142814447E14 1.5447230714712725E14 1.8354210120573478E14 2.8796538968863194E14 100.0 284.83506997050614 258.3897208504488 315744.07526772725 242284.9750480729 305228.9220143168 3.166055326083495E8 2.385587991238202E8 2.34356971821576E8 3.172111829978758E8 3.103981020595791E11 2.2980899062039133E11 2.14606943274759E11 2.262169412279186E11 3.178068108595727E11 3.02357852611596E14 2.209048959170812E14 2.005222233071481E14 1.9964482977865288E14 2.1826579428640125E14 3.141039471563798E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9999524467280203 3.565286578335397E-5 6.0288050476851624E-5 0.9998823925933863 -0.0019563486228113547 0.14745990542972165"
	},
	{
		"auto, 488nm, pass1",
		"lenscorrection.NonLinearTransform",
		"5 21 278.5607932871567 -7.488222603286845 -2.696106457954369 242.55748813643908 8.861071700310369 3.4749386393929678 6.200436487389448 17.688457360392384 5.517888732900951 14.68128478512083 12.313839701085582 12.688044268218263 -4.737799325900783 -18.30474680868719 -8.867884664344137 -4.16196428467239 -3.9298951898288808 -14.783393674848405 -27.565443767493047 -13.596691887971845 2.891816397277398 3.365869451464387 4.873010609277112 3.7012827738110605 3.1961756906537726 2.6717695410443554 2.9837878753734097 2.212781344855361 11.19491673403825 5.257704660349535 0.07299796624230237 -1.7298535379815299 -3.047448641410935 0.36899264676765353 0.12742263452404723 -2.727411633352591 -1.72638331048892 0.1841694184862246 -0.6633600770918218 -0.5425490227628521 5.889721610459077 6.66923648996055 588.9735736124613 666.952131113876 427627.3148874218 380601.0557290073 506449.3237376265 3.388932534955889E8 2.7273916207251126E8 2.8581780215523374E8 4.0994754371564245E8 2.8263877746475824E11 2.1478869930216824E11 2.038620358273385E11 2.301581398538797E11 3.458451027008349E11 2.438725079844942E14 1.7855062918431006E14 1.6019244702628212E14 1.6381230312457294E14 1.9359147986707588E14 3.0040652672401394E14 100.0 284.14574951936356 248.24427181296699 315872.3488556334 242911.23471442546 298924.22634490987 3.173447024121056E8 2.4213888840604576E8 2.3651102648304436E8 3.139209597732013E8 3.1144628109543756E11 2.3445112076256302E11 2.1921165181731653E11 2.294098090469054E11 3.1640119650644684E11 3.035234992060725E14 2.2593098544185416E14 2.0595097864203634E14 2.0465842608446244E14 2.2206911159278612E14 3.138719080540261E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9993561497597955 -3.4009774622045394E-5 6.179002979572814E-5 0.9992883867720027 0.3738472856862287 0.7317443437067976"
	},
	{
		"auto, 594nm",
		"lenscorrection.NonLinearTransform",
		"5 21 275.54150760782824 -8.713259088351212 -2.8134836825245166 240.70597245662537 20.180646203987852 9.809661681289846 5.724796524200448 17.584511856900583 5.315442679005006 14.794778106139006 -31.388560697719573 -0.567464323222976 -2.6131449235479955 -17.593307155958914 -8.05872040843929 -3.9992936986702157 -2.938006644889395 -13.87068445493899 26.395555344984864 -1.2138908578006964 1.2078776295641065 2.257085202040993 2.9904870807587045 3.129710776478205 2.5449719735551106 3.0071223955330337 2.0514294902312447 0.4379794571713649 -10.266713395419936 0.9721288906392161 0.4158965196320854 -1.0149720170844665 -2.152528301962467 0.17250012248409619 0.45406560045615374 -2.225629775354286 -1.5205470643926917 -0.2202453715666448 -0.35334673892430657 0.2712026623740617 5.842913852123452 6.703903298229538 584.2924319105318 670.4196797831047 420468.8630834618 379616.91509702697 510246.13448056777 3.307914994373908E8 2.695584477941578E8 2.856378291644774E8 4.136627095163532E8 2.7428988277383524E11 2.1065696807919586E11 2.018419174641003E11 2.303076192042148E11 3.4942294473401196E11 2.3560841851042403E14 1.740307765218857E14 1.5736482383449616E14 1.6238361227922E14 1.939294026808434E14 3.0387282497773775E14 100.0 281.1988404492852 246.54572583006538 312246.30459957884 240279.13375646618 298452.0001966693 3.132258979958764E8 2.3912673767532143E8 2.3449865988709843E8 3.144499165676153E8 3.070191169638636E11 2.3115733498858337E11 2.166424020161295E11 2.2803414935612234E11 3.177169573284083E11 2.988848780048194E14 2.2249133634411903E14 2.0312304963847175E14 2.0258625586180038E14 2.212297954564062E14 3.1578212090280894E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.000265636918846 9.312136221075484E-6 -3.6200827884728435E-6 1.0002598094247375 -0.002710322344841032 -0.030692021646243628"
	},
	{
		"auto, 488nm, pass2",
		"lenscorrection.NonLinearTransform",
		"5 21 277.8601513566937 -7.644110166767135 -2.705374500283706 241.9678951444662 9.506300925837913 4.459208094717003 6.328114589195193 17.66032198913883 5.305141599058118 14.643978311283432 11.318148126742328 10.200054615261873 -4.734140358920788 -18.199113046449828 -9.205822223747509 -3.9420295380189634 -2.996920358585709 -14.72496448416981 -26.97800099451954 -10.668456614127514 2.997026827486355 2.864294705954194 4.589986075203103 3.7961621901682054 3.695813022427898 2.41315309251981 1.69901302111337 2.1559981484144597 11.090447050827073 3.98095836327443 -0.008215287355932688 -1.2469653315296845 -2.870900851400119 -0.03322352103218007 0.14772977899170558 -2.4396265931923775 -1.9454633751774049 0.18526569465168796 -0.08038035133111154 -0.5227589557111425 5.9203723525237395 6.685302003672961 592.038426490509 668.5589532221987 430932.16652375 384199.5228994749 508296.77502790315 3.41966014335099E8 2.7625655501470727E8 2.891207181062394E8 4.117249416296581E8 2.854294705428297E11 2.1792914981599057E11 2.0701182219691638E11 2.3307046532474564E11 3.474970808751037E11 2.464080302497444E14 1.8132619814518162E14 1.6297471310531994E14 1.6656078365290938E14 1.9616335854022922E14 3.019282928211683E14 100.0 283.59131846352955 247.64237141368335 315798.40808612667 243728.45364645484 298551.4785020822 3.1769788474648947E8 2.4318964655548587E8 2.375924766497265E8 3.138237536799374E8 3.1205954323786646E11 2.3566935906124402E11 2.2045717539936505E11 2.306396559173906E11 3.164713335684399E11 3.042845864166498E14 2.2725234533141775E14 2.072649305292263E14 2.059744160582513E14 2.2336825416607653E14 3.140473554586249E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9992962798959615 -1.2077956993523824E-5 -7.056584799556296E-6 0.9992891692753866 0.2847109267197414 0.5321117792984236"
	},
	{
		"auto, 561nm",
		"lenscorrection.NonLinearTransform",
		"5 21 276.0767448630544 -7.6078544065300004 -2.9122090952910664 240.50075418845367 7.711009033820514 3.6731253683353344 6.765287475445309 18.042586585147774 5.234710995114622 15.56829235238782 16.772154200683204 12.022447388425402 -4.271531062709959 -18.128540406400337 -9.340048363527576 -4.648759853578326 -2.2892910526606087 -15.363589197594358 -32.343856813529264 -12.230297714829145 1.8834353342711045 2.244316788453 4.822198936475656 4.069013133957734 2.8403639874704556 3.0438083059207717 1.4050411284587474 2.1261364234155553 12.773830362740041 4.495894217824985 0.5166307702949213 -1.0141381377104486 -2.7341503313254143 0.01105765619116017 -0.11406941879543053 -2.5654812557526605 -1.3619624920487081 -0.0154398028392988 -0.1820972247815349 -0.5142400978780741 5.861118494272291 6.714553283176399 586.1135055891527 671.4855521368032 422985.91304603935 381951.5115146984 511663.1150372837 3.335822351451996E8 2.722310568030485E8 2.880475073433757E8 4.1531811416031986E8 2.7712940388516034E11 2.1342325966821103E11 2.044269292477785E11 2.3275193900775192E11 3.512434754182632E11 2.383731613661177E14 1.767667005300523E14 1.5996123468567878E14 1.6489857806075944E14 1.963852535848716E14 3.057956344967611E14 100.0 281.8834822013717 246.5184757511195 313391.26305522746 241952.52148415646 299075.1365269668 3.1445913811033E8 2.41374620729003E8 2.3677473959274587E8 3.1540758040180576E8 3.0821133165558984E11 2.3354035580816724E11 2.1943256646515704E11 2.306673076237428E11 3.1882681828526575E11 3.0001393089971525E14 2.2482324557809956E14 2.0599202498641247E14 2.0570328646993578E14 2.2407598186775428E14 3.169558688921712E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"1.0004199709494777 -1.5796813506296946E-4 3.328721143897816E-5 1.000543961812727 -0.18050507427978557 -0.25285301485545153"
	},
	{
		"auto, 647nm",
		"lenscorrection.NonLinearTransform",
		 "5 21 276.99639796890114 -8.88922286082667 -2.6868189636814686 240.6267847990341 19.81887689602472 10.92407413040948 6.262315727223331 17.85982715323713 4.339129202854241 14.738713983460741 -30.377154248563034 -2.7852254339485274 -4.109836539696161 -18.9364970234778 -8.754247667772475 -3.9077920423661965 -0.41677173779744714 -14.307620734901262 25.309041277797345 0.5335376592940912 2.182095376454848 3.8557240336430496 4.532149822940065 3.823812819780019 2.8007294358957395 2.332341352908001 -0.7037683275749123 1.555179304776027 -9.891675904432375 0.5202235752089743 0.3151481018321092 -1.7181378853493081 -2.758608703100357 -0.034307448276384545 0.05864082624317346 -2.4343961043698084 -1.5137854339694954 0.22239562411760705 0.7129953583069386 -0.37204569155754985 5.866624231051106 6.6962630126601725 586.6633390105723 669.6556210783287 424031.40631462116 380831.1886200017 509160.8169951846 3.3478053483686644E8 2.71706267020481E8 2.861857269610379E8 4.124098817977308E8 2.7840583431362836E11 2.1314307788922433E11 2.031664227471709E11 2.3039116806454846E11 3.4808856645146484E11 2.3972743737689456E14 1.766273339930905E14 1.5897789655837494E14 1.6314145081293428E14 1.936906179585573E14 3.0250010413397444E14 100.0 282.59349124198263 246.42106944069775 314014.51007774693 241112.32994665916 298069.7090207218 3.154800061590578E8 2.4027638339888662E8 2.3461165137050942E8 3.138883802764904E8 3.097225697972834E11 2.3260727764301767E11 2.1707777260429865E11 2.277146492971577E11 3.170082592105323E11 3.019914178973506E14 2.2420628765704162E14 2.0379643716169553E14 2.0261146268100547E14 2.2062827800863147E14 3.149643329312027E14 0.0 1024 1024 ",
		"mpicbg.trakem2.transform.AffineModel2D",
		"0.9999348777374893 1.500679614979492E-5 5.550462505329424E-5 0.9998539910073285 -0.10049805033658887 0.061385255548279005"
	}
};


ImageProcessor visualizeDifference(
		int w,
		int h,
		int pWidth,
		int pHeight,
		CoordinateTransform ct1,
		CoordinateTransform ct2) {
	double sx = (double)pWidth / w;
	double sy = (double)pHeight / h;
	FloatProcessor ip = new FloatProcessor(w, h);
	for (int y = 0; y < h; ++y) {
		for (int x = 0; x < w; ++x) {
			double[] l1 = new double[]{x * sx, y * sy};
			double[] l2 = new double[]{x * sx, y * sy};
			ct1.applyInPlace(l1);
			ct2.applyInPlace(l2);
			double dx = l1[0] - l2[0];
			double dy = l1[1] - l2[1];
			double d = Math.sqrt(dx * dx + dy * dy);
			ip.setf(x, y, (float)d);
		}
	}
	//matrix.copyBits( ip, i * 256, j * 256, Blitter.COPY );
	return ip;
}


ImageProcessor visualizeDifferenceVectorDistribution(
		int w,
		int h,
		int pWidth,
		int pHeight,
		CoordinateTransform ct1,
		CoordinateTransform ct2,
		double max) {
	double hw = 0.5 * w;
	double hh = 0.5 * h;
	double sx = (double)pWidth / w;
	double sy = (double)pHeight / h;
	FloatProcessor ip = new FloatProcessor(w, h);
	for (int y = 0; y < h; ++y) {
		for (int x = 0; x < w; ++x) {
			double[] l1 = new double[]{x * sx, y * sy};
			double[] l2 = new double[]{x * sx, y * sy};
			ct1.applyInPlace(l1);
			ct2.applyInPlace(l2);
			double dx = l1[0] - l2[0];
			double dy = l1[1] - l2[1];
			dx = Math.min(w - 1, Math.max(0.0, (dx / max + 1) * hw));
			dy = Math.min(w - 1, Math.max(0.0, (dy / max + 1) * hh));
			int ix = (int)Math.round(dx);
			int iy = (int)Math.round(dy);
			ip.setf(ix, iy, (float)(1.0 + ip.getPixelValue(ix, iy)));
		}
	}
	//matrix.copyBits( ip, i * 256, j * 256, Blitter.COPY );
	return ip;
}

ImageProcessor visualizeDifferenceVectors(
		int w,
		int h,
		int pWidth,
		int pHeight,
		CoordinateTransform ct1,
		CoordinateTransform ct2,
		double max) {
	double sx = (double)pWidth / w;
	double sy = (double)pHeight / h;
	ColorProcessor ip = new ColorProcessor(w, h);
	for (int y = 0; y < h; ++y) {
		for (int x = 0; x < w; ++x) {
			double[] l1 = new double[]{x * sx, y * sy};
			double[] l2 = new double[]{x * sx, y * sy};
			ct1.applyInPlace(l1);
			ct2.applyInPlace(l2);
			double dx = (l1[0] - l2[0] ) / max;
			double dy = (l1[1] - l2[1] ) / max;
			double d = Math.sqrt(dx * dx + dy * dy);
			double s = 1.0 / d;
			if (s < 1.0) {
				dx *= s;
				dy *= s;
			}
			
			ip.set(x, y, mpicbg.ij.util.Util.colorVector(dx, dy));
		}
	}
	return ip;
}

Model sampleModel(CoordinateTransform ct, Class modelClass, int width, int height) {
	model = modelClass.newInstance();
	matches = new ArrayList();
	double scaleX = ((double)width - 1.0f) / 63.0f;
	double scaleY = ((double)height - 1.0f) / 63.0f;
	for (int y = 0; y < 64; ++y) {
		double ys = scaleY * y;
		for (int x = 0; x < 64; ++x) {
			double xs = scaleX * x;
			Point p = new Point(new double[]{xs, ys});
			p.apply(ct);
			matches.add(new PointMatch(p, p));
		}
	}
	model.fit(matches);
	return model;
}

/**
 * Estimate a transformation model between two CoordinateTransforms.
 * The model maps ct1 into ct2.
 */
Model sampleModel2(
		CoordinateTransform ct1,
		CoordinateTransform ct2,
		Class modelClass,
		int width,
		int height) {
	model = modelClass.newInstance();
	matches = new ArrayList();
	double scaleX = ((double)width - 1.0f) / 63.0f;
	double scaleY = ((double)height - 1.0f) / 63.0f;
	for (int y = 0; y < 64; ++y) {
		double ys = scaleY * y;
		for (int x = 0; x < 64; ++x) {
			double xs = scaleX * x;
			Point p = new Point(new double[]{xs, ys});
			Point q = new Point(new double[]{xs, ys});
			ct1.applyInPlace(p.getL());
			q.apply(ct2);
			matches.add(new PointMatch(p, q));
		}
	}
	model.fit(matches);
	return model;
}


CoordinateTransform createTransform(
		String className,
		String dataString) {
	CoordinateTransform ct = (CoordinateTransform)Class.forName(className).newInstance();
	ct.init(dataString);
	return ct;
}

CoordinateTransformList createTransformList(int j) {
	CoordinateTransformList ctl = new CoordinateTransformList();
	for (int k = 2; k < transforms[j].length; k +=2)
		ctl.add(createTransform(transforms[j][k-1], transforms[j][k]));
	return ctl;
}

ImagePlus showDifferenceVectors() {
	ColorProcessor table = new ColorProcessor(
		(w + xSkip) * transforms.length - xSkip,
		(h + ySkip) * transforms.length - ySkip);
	ImagePlus impTable = new ImagePlus("Matrix", table);
	impTable.show();
	
	for (int i = 0; i < transforms.length; ++i) {
		ct1 = createTransformList(i);
		for (int j = 0; j < transforms.length; ++j) {
			ct2 = createTransformList(j);
	
			/* fit a simple linear model to compare with using some transferred samples */
			t = sampleModel2(ct2, ct1, invarianceModelClass, pWidth, pHeight);
			ct2.add(t);
	
			ImageProcessor ip = visualizeDifferenceVectors(
				w,
				h,
				pWidth,
				pHeight,
				ct1,
				ct2,
				max);
	
			table.copyBits(ip, (w + xSkip) * i, (h + ySkip) * j, Blitter.COPY);
			impTable.updateAndDraw();
		}
	}
	return impTable;
}


ImagePlus showDifferenceVectorDistributions() {
	FloatProcessor table = new FloatProcessor(
		(w + xSkip) * transforms.length - xSkip,
		(h + ySkip) * transforms.length - ySkip);
	ImagePlus impTable = new ImagePlus("Matrix", table);
	impTable.show();
	
	
	for (int i = 0; i < transforms.length; ++i) {
		ct1 = createTransformList(i);
		for (int j = 0; j < transforms.length; ++j) {
			ct2 = createTransformList(j);
	
			/* fit a simple linear model to compare with using some transferred samples */
			t = sampleModel2(ct2, ct1, invarianceModelClass, pWidth, pHeight);
			ct2.add(t);
	
			ImageProcessor ip = visualizeDifferenceVectorDistribution(
				w,
				h,
				pWidth,
				pHeight,
				ct1,
				ct2,
				max);
	
			table.copyBits(ip, (w + xSkip) * i, (h + ySkip) * j, Blitter.COPY);
			impTable.updateAndDraw();
		}
	}
	return impTable;
}

void drawCircles(ColorProcessor ip) {
	for (int s = 1; s <= max; ++s) {
		ip.setColor(
			new Color(
				(float)(Math.min(1.0f, 2.0f * s / max)),
				(float)(Math.min(1.0f, 2.0f - 2 * s / max)),
				0.0f));
		for (int i = 0; i < transforms.length; ++i) {
			int x = (w + xSkip) * i;
			for (int j = i + 1; j < transforms.length; ++j) {
				int y = (h + ySkip) * j;
				ip.drawOval(
					(int)(w / 2 + x - Math.round(s * w / max / 2)),
					(int)(h / 2 + y - Math.round(s * h / max / 2)),
					(int)Math.round(s * w / max) + 1,
					(int)Math.round(s * h / max) + 1);
			}
		}
	}
}

void drawLabels(ImagePlus imp, int offset) {
	ip = imp.getProcessor().createProcessor(imp.getWidth() + offset, imp.getHeight() +offset);
	ip.copyBits(imp.getProcessor(), offset, offset, Blitter.COPY);
	ip.setColor(Color.WHITE);
	ip.setAntialiasedText(true);
	ip.setJustification(ImageProcessor.CENTER_JUSTIFY);
	Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 14);
	ip.setFont(font);
	for (int i = 0; i < transforms.length; ++i) {
		int x = (w + xSkip) * i;
		ip.drawString(
			transforms[i][0],
			(int)(w / 2 + x + offset),
			20);
	}
	ip = ip.rotateRight();
//	ip.flipHorizontal();
	ip.setColor(Color.WHITE);
	ip.setAntialiasedText(true);
	ip.setJustification(ImageProcessor.CENTER_JUSTIFY);
	//ip.setFont(font.deriveFont(new AffineTransform(-1, 0, 0, 1, 0, 0)));
	ip.setFont(font);
	for (int i = 0; i < transforms.length; ++i) {
		int x = (w + xSkip) * i;
		ip.drawString(
			transforms[transforms.length - 1 - i][0],
			(int)(w / 2 + x),
			20);
	}
	ip = ip.rotateLeft();
//	ip.flipHorizontal();
	imp.setProcessor(ip);
}


// main

impVectors = showDifferenceVectors();
impDists = showDifferenceVectorDistributions();

impDists.setDisplayRange(0, 32);
Thread.sleep(1000);
IJ.run(impDists, "Fire", "");
Thread.sleep(1000);
IJ.run(impDists, "RGB Color", "");
Thread.sleep(1000);
impDists.getProcessor().snapshot();
roi = new PolygonRoi(
	new int[]{0, impVectors.getWidth(), impVectors.getWidth()},
	new int[]{0, 0, impVectors.getHeight()},
	3,
    Roi.POLYGON);
impVectors.setRoi(roi);
IJ.run(impVectors, "Copy", "");
impDists.setRoi(roi);
IJ.run(impDists, "Paste", "");

drawCircles(impDists.getProcessor());
drawLabels(impDists, 26);
impDists.updateAndDraw();
